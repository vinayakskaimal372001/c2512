Given UNF  : 

    booking_id ,seat_number ,bus_id,bus_number,bus_type, scheduleid
    route_start_location,route_end_location, departure_time ,arrival_time,distance
    customer_id ,customer_name ,contact_number,Email_id
    payment_id, payment_mode, amount.

    ticket1_seat_number ,ticket1_seat_price,
    ticket2_seat_number,ticket2_seat_price,
    ticket3_seat_number, ticket3_seat_price 

--------------------------------------------------------------------------------------------------------------------------------------

Formed 1NF :

Customers : CustomerID, Customer_Name, ContactNumber, Email
Bus Details : BusID, BusNumber, BusType
Bus Route : RouteID, StartLocation, EndLocation, Distance
Bus Schedules : ScheduleID, BusID, RouteID, DepartureTime, ArrivalTime
Bus Bookings : BookingID, CustomerID, ScheduleID, SeatNumber, BookingDate, Status
Bus Payments : PaymentID, BookingID, Amount, PaymentMethod, PaymentDate

My data is going to be:
I am vinayak, and I have booked tickets for my family for a bus journey from Tvm to Kozhikode on sleeper bus with bus no 201  
operated by our travel agency.
travel_date: 2024-11-20, departure_time: 8:00 AM, arrival_time: 12:00 PM
seat_numbers: [L1, L2, L3], each seat price is Rs.550
And
I have booked tickets for my parents for a bus journey from Ernakulam to Varkala on bus number 202 operated by KSRTC.
travel_date: 2024-11-21 , departure_time: 9:30 AM, arrival_time: 1:30 PM
seat_numbers: [L3, L2], each seat price is Rs.250

Requirements:
Provide the table creation scripts in Oracle for the bus ticket reservation system. 
Include primary keys, NOT NULL constraints, and foreign keys where appropriate.
Provide sample INSERT statements for each table to input the given data.
Present the data in a tabular format, ensuring normalization up to at least 3NF. 

----------------solution--------------------------------

-- Table for customers

CREATE TABLE Customers (
    CustomerID INT  PRIMARY KEY ,
    Customer_Name VARCHAR(50),
    ContactNumber VARCHAR(15),
    Email VARCHAR(100) 
);


-- Table for Bus_Details

CREATE TABLE Bus_Details
(
  BusID NUMBER  PRIMARY KEY,
  BusNumber NUMBER NOT NULL,
  Type VARCHAR(125) NOT NULL
);


-- Table for Bus_Routes

CREATE TABLE Bus_Routes
(
  RouteID NUMBER PRIMARY KEY,
  START_LOCATION VARCHAR(125) NOT NULL,
  END_LOCATION VARCHAR(125) NOT NULL,
  DISTANCE NUMBER NOT NULL
);


-- Table for bus_Schedule

CREATE TABLE Bus_Schedules 
(
  ScheduleID NUMBER  PRIMARY KEY ,
  BusID INT,
  RouteID INT,
  DepartureTime DATE,
  ArrivalTime DATE,
  FOREIGN KEY (BusID) REFERENCES BUS_DETAILS(BusID),
  FOREIGN KEY (RouteID) REFERENCES BUS_ROUTES(RouteID)
);


-- Table for bookings

CREATE TABLE Bookings 
(
  BookingID INT PRIMARY KEY,
  CustomerID INT,
  ScheduleID INT,
  SeatNumber varchar(50),
  BookingDate DATE DEFAULT CURRENT_DATE,
  BookingStatus VARCHAR(20),
  FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
  FOREIGN KEY (ScheduleID) REFERENCES Bus_Schedules(ScheduleID)
);


-- Table for payments

CREATE TABLE Payments 
(
  PaymentID INT PRIMARY KEY,
  BookingID INT,
  Amount DECIMAL(8, 2),
  PaymentMethod VARCHAR(20),
  PaymentDate DATE DEFAULT CURRENT_DATE,
  FOREIGN KEY (BookingID) REFERENCES Bookings(BookingID)
);


--insert data into customers table

INSERT INTO Customers (CustomerID, Customer_Name, ContactNumber, Email)
VALUES (1, 'Nimisha ', '555-1234', 'nimisha@example.com', TO_DATE('2024-11-01');

INSERT INTO Customers (CustomerID, Customer_Name, ContactNumber, Email) 
VALUES(2, 'Ayisha', '555-5678', 'ayisha@example.com', TO_DATE('2024-10-15');

INSERT INTO Customers (CustomerID, Customer_Name, ContactNumber, Email) 
VALUES(3, 'Sana', '555-8765', 'sana@example.com', TO_DATE('2024-09-20');

INSERT INTO Customers (CustomerID, Customer_Name, ContactNumber, Email) 
VALUES(4, 'Vinayak', '555-4321', 'vinayak@example.com');

INSERT INTO Customers (CustomerID, Customer_Name, ContactNumber, Email) 
VALUES (5, 'Vishakh', '555-7890', 'vishakh@example.com');


--insert data into Bus_details table

INSERT INTO Bus_details (BusID, BusNumber, Type)
VALUES (101, 201, 'Sleeper');

INSERT INTO Bus_details (BusID, BusNumber, Type)
VALUES (102, 202, 'Semi-Sleeper');

INSERT INTO Bus_details (BusID, BusNumber, Type)
VALUES (103, 203, 'Luxury');

INSERT INTO Bus_details (BusID, BusNumber, Type)
VALUES (104, 204, 'Semi-Sleeper');

INSERT INTO Bus_details (BusID, BusNumber, Type)
VALUES (105, 205, 'Sleeper');


--insert data into Bus_Routes table

INSERT INTO Bus_Routes (RouteID, START_LOCATION, END_LOCATION, DISTANCE)
VALUES (40, 'Ernakulam', 'Kannur',165);

INSERT INTO Bus_Routes (RouteID, START_LOCATION, END_LOCATION, DISTANCE)
VALUES (42, 'Kozhikode', 'Ernakulam',80);

INSERT INTO Bus_Routes (RouteID, START_LOCATION, END_LOCATION, DISTANCE)
VALUES (44, 'Trivandrum', 'Palakkad',135);

INSERT INTO Bus_Routes (RouteID, START_LOCATION, END_LOCATION, DISTANCE)
VALUES (46, 'Trissur', 'Malappuram',30);

INSERT INTO Bus_Routes (RouteID, START_LOCATION, END_LOCATION, DISTANCE)
VALUES (48, 'Kasargod', 'Wayanad',75);


--insert data into Bus_Schedules table

INSERT INTO Bus_Schedules (ScheduleID, BusID, RouteID, DepartureTime, ArrivalTime) 
VALUES (501, 101, 40, TO_DATE('2024-11-20 08:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-11-20 12:00:00', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO Bus_Schedules (ScheduleID, BusID, RouteID, DepartureTime, ArrivalTime) 
VALUES (511, 102, 42, TO_DATE('2024-11-21 09:30:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-11-21 13:30:00', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO Bus_Schedules (ScheduleID, BusID, RouteID, DepartureTime, ArrivalTime) 
VALUES(521, 103, 44, TO_DATE('2024-11-22 07:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-11-22 11:00:00', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO Bus_Schedules (ScheduleID, BusID, RouteID, DepartureTime, ArrivalTime) 
VALUES (531, 104, 46, TO_DATE('2024-11-23 10:15:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-11-23 14:15:00', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO Bus_Schedules (ScheduleID, BusID, RouteID, DepartureTime, ArrivalTime) 
VALUES (541, 105, 48, TO_DATE('2024-11-24 06:30:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-11-24 10:30:00', 'YYYY-MM-DD HH24:MI:SS'),);


--insert data into Bookings table

INSERT INTO Bookings (BookingId, CustomerID, ScheduleID, SeatNumber, BookingDate, BookingStatus)
VALUES (10, 1, 501, 'L1', TO_DATE('2024-11-16', 'YYYY-MM-DD'), 'Booked');

INSERT INTO Bookings (BookingId, CustomerID, ScheduleID, SeatNumber, BookingDate, BookingStatus)
VALUES (20, 2, 511, 'L2', TO_DATE('2024-11-10', 'YYYY-MM-DD'), 'Not Booked');

INSERT INTO Bookings (BookingId, CustomerID, ScheduleID, SeatNumber, BookingDate, BookingStatus)
VALUES (30, 4, 521, 'U1', TO_DATE('2024-11-05', 'YYYY-MM-DD'), 'Booked');

INSERT INTO Bookings (BookingId, CustomerID, ScheduleID, SeatNumber, BookingDate, BookingStatus)
VALUES (40, 3, 531, 'U1', TO_DATE('2024-11-03', 'YYYY-MM-DD'), 'Not Booked');

INSERT INTO Bookings (BookingId, CustomerID, ScheduleID, SeatNumber, BookingDate, BookingStatus)
VALUES (50, 5, 541, 'U2', TO_DATE('2024-10-21', 'YYYY-MM-DD'), 'Booked');


--insert data into Payments table

INSERT INTO Payments (PaymentID, BookingID, Amount, PaymentMethod, PaymentDate)
VALUES (1, 10, 150.00, 'Credit Card', TO_DATE('2024-11-16', 'YYYY-MM-DD'));

INSERT INTO Payments (PaymentID, BookingID, Amount, PaymentMethod, PaymentDate)
VALUES (2, 20, 0.00, 'N/A', TO_DATE('2024-11-10', 'YYYY-MM-DD'));

INSERT INTO Payments (PaymentID, BookingID, Amount, PaymentMethod, PaymentDate)
VALUES (3, 30, 300.00, 'Cash', TO_DATE('2024-11-05', 'YYYY-MM-DD'));

INSERT INTO Payments (PaymentID, BookingID, Amount, PaymentMethod, PaymentDate)
VALUES (4, 40, 0.00, 'N/A', TO_DATE('2024-11-03', 'YYYY-MM-DD'));

INSERT INTO Payments (PaymentID, BookingID, Amount, PaymentMethod, PaymentDate)
VALUES (5, 50, 200.00, 'Online', TO_DATE('2024-10-21', 'YYYY-MM-DD'));


Tabular Data Representation

Customer Table 

CustomerID | Customer_Name | ContactNumber | Email                   
--------------------------------------------------------------------
1          | Nimisha      | 555-1234      | nimisha@example.com     
2          | Ayisha       | 555-5678      | ayisha@example.com      
3          | Sana         | 555-8765      | sana@example.com       
4          | Vinayak      | 555-4321      | vinayak@example.com     
5          | Vishakh      | 555-7890      | vishakh@example.com     


Bus_Details Table 

BusID | BusNumber | Type
-----------------------------------
101   | 201       | Sleeper
102   | 202       | Semi-Sleeper
103   | 203       | Luxury
104   | 204       | Semi-Sleeper
105   | 205       | Sleeper


Bus_Route Table 

RouteID | Start_Location | End_Location | Distance
---------------------------------------------------
40      | Ernakulam     | Kannur      | 200
42      | Kozhikode     | Ernakulam   | 180
44      | Trivandrum    | Palakkad    | 250
46      | Trissur       | Malappuram  | 50
48      | Kasargod      | Wayanad     | 150


Bus_Schedule  Table 

| ScheduleID | BusID | RouteID | DepartureTime          | ArrivalTime            
|------------|-------|---------|------------------------|------------------------
| 501        | 101   | 40      | 2024-11-20 08:00:00    | 2024-11-20 12:00:00        
| 511        | 102   | 42      | 2024-11-21 09:30:00    | 2024-11-21 13:30:00           
| 521        | 103   | 44      | 2024-11-22 07:00:00    | 2024-11-22 11:00:00        
| 531        | 104   | 46      | 2024-11-23 10:15:00    | 2024-11-23 14:15:00             
| 541        | 105   | 48      | 2024-11-24 06:30:00    | 2024-11-24 10:30:00            


Bookings  Table

BookingID | CustomerID | ScheduleID | SeatNumber | BookingDate | BookingStatus
-------------------------------------------------------------------------------------------
10        | 1          | 501        | L1         | 2024-11-16  | Booked
20        | 2          | 511        | L2         | 2024-11-10  | Not Booked
30        | 4          | 521        | U1         | 2024-11-05  | Booked
40        | 3          | 531        | U1         | 2024-11-03  | Not Booked
50        | 5          | 541        | U2         | 2024-10-21  | Booked


Payments Table

PaymentID | BookingID | Amount | PaymentMethod | PaymentDate
-------------------------------------------------------------
1         | 10        | 150.00 | Credit Card   | 2024-11-16
2         | 20        | 0.00   | N/A           | 2024-11-10
3         | 30        | 300.00 | Cash          | 2024-11-05
4         | 40        | 0.00   | N/A           | 2024-11-03
5         | 50        | 200.00 | Online        | 2024-10-21


ALTER TABLE customers 
ADD (
    aadhaar_id VARCHAR2(12)
);

update customers set aadhaar_id = '5553 8416' where CustomerID = 1;
UPDATE customers SET aadhaar_id = '5553 8417' WHERE CustomerID = 2;
UPDATE customers SET aadhaar_id = '5553 8418' WHERE CustomerID = 3;
UPDATE customers SET aadhaar_id = '5553 8419' WHERE CustomerID = 4;
UPDATE customers SET aadhaar_id = '5553 8420' WHERE CustomerID = 5;

| CustomerID | Customer_Name | ContactNumber | Email                   | RegisteredDate | aadhaar_id 
|------------|--------------|---------------|-------------------------|----------------|------------
| 1          | Nimisha      | 555-1234      | nimisha@example.com     | 2024-11-01     | 5553 8416  
| 2          | Ayisha       | 555-5678      | ayisha@example.com      | 2024-10-15     | 5553 8417  
| 3          | Sana         | 555-8765      | sana@example.com        | 2024-09-20     | 5553 8418  
| 4          | Vinayak      | 555-4321      | vinayak@example.com     | 2024-08-05     | 5553 8419  
| 5          | Vishakh      | 555-7890      | vishakh@example.com     | 2024-11-10     | 5553 8420  


-> Find the name and contact number of customers who booked seats but didn't make a payment.

SELECT Customer_Name, ContactNumber 
FROM Customers 
WHERE CustomerID IN (
    SELECT CustomerID 
    FROM Bookings 
    WHERE BookingID NOT IN (SELECT BookingID FROM Payments)
);

-> Get the Bus Number and Type for buses that have scheduled routes starting from 'Ernakulam'.

SELECT BusNumber, Type 
FROM Bus_Details 
WHERE BusID IN (
    SELECT BusID 
    FROM Bus_Schedules 
    WHERE DepartureLocation = 'Ernakulam'
);

-> Display bookings that are 'Not Booked' along with customer and route information.

SELECT c.Customer_Name, r.Start_Location, r.End_Location, s.DepartureTime, s.ArrivalTime 
FROM Bookings b
JOIN Customers c ON b.CustomerID = c.CustomerID
JOIN Bus_Schedules s ON b.ScheduleID = s.ScheduleID
JOIN Bus_Routes r ON s.RouteID = r.RouteID
WHERE b.BookingStatus = 'Not Booked';


-> Find the name of customers who booked seats and their total payment amount.

SELECT Customer_Name, 
       (SELECT SUM(Amount) 
        FROM Payments 
        WHERE Payments.BookingID = Bookings.BookingID) AS TotalAmount
FROM Customers
JOIN Bookings ON Customers.CustomerID = Bookings.CustomerID;


-> List all bookings with 'Booked' status where the payment amount exceeds 150.

SELECT BookingID, CustomerID, SeatNumber 
FROM Bookings b
WHERE BookingStatus = 'Booked' 
AND EXISTS (
    SELECT 1 
    FROM Payments p 
    WHERE p.BookingID = b.BookingID AND p.Amount > 150
);

-> Get the list of customers who have made payments, along with their payment details.

SELECT c.Customer_Name, c.ContactNumber, p.Amount, p.PaymentMethod, p.PaymentDate 
FROM Customers c 
JOIN Bookings b ON c.CustomerID = b.CustomerID
JOIN Payments p ON b.BookingID = p.BookingID;


-> Show the details of all bus schedules, including the bus type.

SELECT s.ScheduleID, s.DepartureTime, s.ArrivalTime, s.DepartureLocation, s.ArrivalLocation, b.Type 
FROM Bus_Schedules s 
INNER JOIN Bus_Details b ON s.BusID = b.BusID;


-> Display bookings that are 'Not Booked' along with customer and route information.

SELECT c.Customer_Name, r.Start_Location, r.End_Location, s.DepartureTime, s.ArrivalTime 
FROM Bookings b
JOIN Customers c ON b.CustomerID = c.CustomerID
JOIN Bus_Schedules s ON b.ScheduleID = s.ScheduleID
JOIN Bus_Routes r ON s.RouteID = r.RouteID
WHERE b.BookingStatus = 'Not Booked';
